// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jackwhelpton/fasthttp-routing/v2 (interfaces: DataWriter)

// Package api_test is a generated GoMock package.
package api_test

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	fasthttp "github.com/valyala/fasthttp"
)

// MockDataWriter is a mock of DataWriter interface.
type MockDataWriter struct {
	ctrl     *gomock.Controller
	recorder *MockDataWriterMockRecorder
}

// MockDataWriterMockRecorder is the mock recorder for MockDataWriter.
type MockDataWriterMockRecorder struct {
	mock *MockDataWriter
}

// NewMockDataWriter creates a new mock instance.
func NewMockDataWriter(ctrl *gomock.Controller) *MockDataWriter {
	mock := &MockDataWriter{ctrl: ctrl}
	mock.recorder = &MockDataWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataWriter) EXPECT() *MockDataWriterMockRecorder {
	return m.recorder
}

// SetHeader mocks base method.
func (m *MockDataWriter) SetHeader(arg0 *fasthttp.ResponseHeader) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetHeader", arg0)
}

// SetHeader indicates an expected call of SetHeader.
func (mr *MockDataWriterMockRecorder) SetHeader(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetHeader", reflect.TypeOf((*MockDataWriter)(nil).SetHeader), arg0)
}

// Write mocks base method.
func (m *MockDataWriter) Write(arg0 io.Writer, arg1 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write.
func (mr *MockDataWriterMockRecorder) Write(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockDataWriter)(nil).Write), arg0, arg1)
}
